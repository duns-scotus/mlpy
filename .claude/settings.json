{
  "mcpServers": {
    "filesystem": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-filesystem",
               "./src", "./tests", "./docs", "./benchmarks", "./examples"]
    },
    "memory": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-memory"]
    },
    "sequential-thinking": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-sequential-thinking"]
    }
  },
  "permissions": {
    "allow": [
      "Bash(make *)", "Bash(nox *)", "Bash(python *)", "Bash(pytest *)",
      "Bash(git *)", "Bash(pip install *)",
      "Read(src/**)", "Edit(src/**)", "Write(src/**)",
      "Read(tests/**)", "Edit(tests/**)", "Write(tests/**)",
      "Read(docs/**)", "Edit(docs/**)", "Write(docs/**)",
      "Read(benchmarks/**)", "Edit(benchmarks/**)", "Write(benchmarks/**)",
      "Read(examples/**)", "Edit(examples/**)", "Write(examples/**)",
      "Read(*.py)", "Edit(*.py)", "Write(*.py)",
      "Read(*.md)", "Edit(*.md)", "Write(*.md)",
      "Read(*.toml)", "Edit(*.toml)", "Write(*.toml)",
      "Read(*.txt)", "Edit(*.txt)", "Write(*.txt)",
      "Read(*.yaml)", "Edit(*.yaml)", "Write(*.yaml)",
      "Read(*.yml)", "Edit(*.yml)", "Write(*.yml)",
      "Read(*.json)", "Edit(*.json)", "Write(*.json)",
      "Read(*.lark)", "Edit(*.lark)", "Write(*.lark)"
    ],
    "deny": [
      "Bash(rm -rf *)", "Bash(del *)", "Bash(rmdir *)",
      "Edit(.env*)", "Write(.env*)",
      "Edit(.git/**)", "Write(.git/**)"
    ]
  },
  "hooks": {
    "preEdit": {
      "patterns": [
        {
          "matcher": "src/mlpy/runtime/capabilities/*",
          "warning": "⚠️ Editing critical security component - extensive testing required"
        },
        {
          "matcher": "src/mlpy/ml/grammar/*",
          "warning": "⚠️ Editing core grammar - validate with complete test suite"
        }
      ]
    },
    "postEdit": {
      "patterns": [
        {
          "matcher": "*.py",
          "action": "format",
          "command": "black"
        }
      ]
    }
  }
}
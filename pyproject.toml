[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mlpy"
version = "2.0.0"
description = "Security-first ML language compiler with capability-based security"
authors = [
    {name = "mlpy Team", email = "team@mlpy.dev"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.12"
keywords = ["compiler", "security", "ml", "transpiler", "sandbox"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Compilers",
    "Topic :: Security",
]

dependencies = [
    # Core parsing and AST
    "lark>=1.1.7",

    # CLI and interface
    "click>=8.1.0",
    "rich>=13.0.0",

    # Development tools
    "pygments>=2.15.0",

    # System utilities
    "psutil>=5.9.0",

    # Type hints
    "typing-extensions>=4.5.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "pytest-timeout>=2.1.0",
    "pytest-mock>=3.11.0",
    "hypothesis>=6.82.0",

    # Code quality
    "ruff>=0.0.287",
    "black>=23.7.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",

    # Task automation
    "nox>=2023.4.22",

    # Documentation
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
    "myst-parser>=2.0.0",

    # Performance
    "memory-profiler>=0.61.0",
    "py-spy>=0.3.14",

    # Security testing
    "bandit>=1.7.5",
    "safety>=2.3.5",
]

lsp = [
    "pygls>=1.0.0",
    "python-lsp-server>=1.7.0",
]

dap = [
    "debugpy>=1.6.7",
]

docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
    "myst-parser>=2.0.0",
    "sphinx-copybutton>=0.5.2",
]

[project.scripts]
mlpy = "mlpy.cli.app:cli"
mlpy-lsp = "mlpy.lsp.server:main"
mlpy-dap = "mlpy.dap.adapter:main"

[project.urls]
Homepage = "https://github.com/mlpy-team/mlpy"
Documentation = "https://docs.mlpy.dev"
Repository = "https://github.com/mlpy-team/mlpy.git"
Issues = "https://github.com/mlpy-team/mlpy/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
mlpy = ["py.typed", "ml/grammar/*.lark"]

# Tool configurations
[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'

[tool.ruff]
target-version = "py312"
line-length = 100
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src/mlpy",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=95",
    "--strict-markers",
    "--disable-warnings",
    "--tb=short",
    "-q",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "security: Security tests",
    "performance: Performance tests",
    "slow: Slow tests (skipped by default)",
]